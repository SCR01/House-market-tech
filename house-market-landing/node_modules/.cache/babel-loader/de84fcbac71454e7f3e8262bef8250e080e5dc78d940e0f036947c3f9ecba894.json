{"ast":null,"code":"import{useState,useEffect}from'react';// Custom hook for debouncing values\nconst useDebounce=(value,delay)=>{const[debouncedValue,setDebouncedValue]=useState(value);useEffect(()=>{// Set a timeout to update debounced value after delay\nconst timer=setTimeout(()=>{setDebouncedValue(value);},delay);// Cancel the timeout if value changes or component unmounts\nreturn()=>{clearTimeout(timer);};},[value,delay]);return debouncedValue;};export default useDebounce;","map":{"version":3,"names":["useState","useEffect","useDebounce","value","delay","debouncedValue","setDebouncedValue","timer","setTimeout","clearTimeout"],"sources":["C:/Users/scr/OneDrive/Desktop/House market tech/house-market-landing/src/utils/useDebounce.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n// Custom hook for debouncing values\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    // Set a timeout to update debounced value after delay\n    const timer = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    // Cancel the timeout if value changes or component unmounts\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C;AACA,KAAM,CAAAC,WAAW,CAAGA,CAACC,KAAK,CAAEC,KAAK,GAAK,CACpC,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGN,QAAQ,CAACG,KAAK,CAAC,CAE3DF,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAM,KAAK,CAAGC,UAAU,CAAC,IAAM,CAC7BF,iBAAiB,CAACH,KAAK,CAAC,CAC1B,CAAC,CAAEC,KAAK,CAAC,CAET;AACA,MAAO,IAAM,CACXK,YAAY,CAACF,KAAK,CAAC,CACrB,CAAC,CACH,CAAC,CAAE,CAACJ,KAAK,CAAEC,KAAK,CAAC,CAAC,CAElB,MAAO,CAAAC,cAAc,CACvB,CAAC,CAED,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}